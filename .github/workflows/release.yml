name: Release a build with Doku

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Generate Build defines
        run: |
          MY_SWVERSION=$(printf '%.10s' "$GITHUB_REF_NAME" )
          echo "#define BUILD_SWVERSION \"SW-$MY_SWVERSION\"" >> src/build.h
          echo "MY_SWVERSION=$MY_SWVERSION" >> $GITHUB_ENV
          cat src/build.h
          pwd
          printenv
          
          
      - name: Build the mcu workspace
        uses: RobertK66/actions-build-mcuxpresso@main
        id: build-it
        with:
          project:  ClimbObc

      - name: rename the axf file
        run: |
          cp ${{ steps.build-it.outputs.axf }} ClimbObc${{ env.MY_SWVERSION }}.axf          
          ls 
      
      - name: Replace MD tokens
        run: |
          ESCAPED_REPLACE=$(printf '%s\n' "${{ github.ref }}" | sed -e 's/[\/&]/\\&/g')
          find doc/*.md -type f -exec sed -i "s/@TKN_COMMIT_ID@/$ESCAPED_REPLACE/g" {} \;
          find doc/*.md -type f -exec sed -i "s/@TKN_VERSION@/${{ github.sha }}/g" {} \;
          cat doc/back.md
    
      - name: Publish PDF Document
        uses: RobertK66/actions-document-publish@79b8e666c0f531c297a98eee730d3fdecccde9f3
        id: publish-pdf
        with:
          sources: 'doc/front.md doc/m*.md doc/back.md'
          images_dir: doc/pic
          image_import: pic
          
      - name: rename the pdf file
        run: |
          cp ${{ steps.publish-pdf.outputs.pdf }} ClimbObcManual.pdf          
          ls     
          
          
      #- name: Upload Binary
      #  uses: actions/upload-artifact@v2
      #  id: upload-axf
      #  with:
      #    name: 'obc-axf-${{ env.MY_SWVERSION }}'
      #    path: ClimbObc${{ env.MY_SWVERSION }}.axf 
      #    if-no-files-found: error
          
      - name: Release with Notes
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ClimbObc*.*
            tool/FlashOBC.bat
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}          
          

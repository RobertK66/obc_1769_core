name: Build with MCU Expresso

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  buildJob:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kind: ['obc', 'dev']
        include:
          - kind: obc
            board: BA_CLIMBOBC
          - kind: dev
            board: BA_OM13085_EM2T
            
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Generate Build defines
        run: |
          MY_SWVERSION=$(printf '%.8s' "${{ github.sha }}" )
          echo "#define BUILD_SWVERSION \"SW-$MY_SWVERSION\"" >> ClimbObc/src/build.h
          echo "#define BA_BOARD ${{ matrix.board }}" >> ClimbObc/src/build.h
          echo "MY_SWVERSION=$MY_SWVERSION" >> $GITHUB_ENV
          cat ClimbObc/src/build.h
          pwd
          
      - name: Build the mcu workspace
        uses: RobertK66/actions-build-mcuxpresso@main
        id: publish-document
        with:
          projects: |
            ado_chip_175x_6x
            ClimbObc
          configs: |
            ado_chip_175x_6x/TestConfig_2
            ClimbObc/Debug
          resultpath:  ClimbObc/Debug/ClimbObc.axf

      - name: rename the axf file
        run: |
          cp ${{ steps.publish-document.outputs.axf }} ClimbObc${{ env.MY_SWVERSION }}-${{ matrix.kind }}.axf          
          ls 
          
      - name: Upload Binary
        uses: actions/upload-artifact@v3
        id: upload-axf
        with:
          name: 'Build-${{ env.MY_SWVERSION }}'
          path: ClimbObc${{ env.MY_SWVERSION }}-${{ matrix.kind }}.axf 
          if-no-files-found: error
          
  releaseJob:
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    needs: buildJob
    steps: 
      - name: Download all the binaries
        uses: actions/download-artifact@v3
        with:
          name: 'Build-${{ env.MY_SWVERSION }}'
          path: dist/
      - name: upload reelese assets    
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_path: dist
          asset_name: asset${{ env.MY_SWVERSION }}.zip
          asset_content_type: application/zip
          
